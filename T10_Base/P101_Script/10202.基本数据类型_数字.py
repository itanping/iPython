"""
Python3 基本数据类型
数字有四种类型：整数（int）、布尔型（bool）、浮点数（float）和复数（复数）。
在 Python 中，变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建。
在 Python 中，变量就是变量，它没有类型，我们所说的"类型"是变量所指的内存中对象的类型。可以通过赋值指向不同类型的对象。
在 Python 3里，只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。
在 Python 3中，bool 是 int 的子类，True 和 False 可以和数字相加（在 Python2 中是没有布尔型的，它用数字 0 表示 False，用 1 表示 True。）
在混合计算时，Python会把整型转换成为浮点数。
数据类型是不允许改变的，这就意味着如果改变数字数据类型的值，将重新分配内存空间。

等号（=）用来给变量赋值。
等号（=）运算符左边是一个变量名，等号（=）运算符右边是存储在变量中的值。
"""
from math import fabs, floor
from random import choice, random

print('---------------------------------------------------------------------------------------------------------------')
number = 100      # 整型变量
miles = 1000.0    # 浮点型变量
name = "悟空"     # 字符串
print(number, miles, name)
"""
100 1000.0 悟空
"""


print('---------------------------------------------------------------------------------------------------------------')
'''多个变量赋值'''

# Python允许你同时为多个变量赋值
a = b = c = 1            # 相同类型：创建一个整型对象，值为 1，从后向前赋值，三个变量被赋予相同的数值。
print(a, b, c)
"""
1 1 1
"""

a, b, c = 1, 2, "悟空"   # 不同类型：两个整型对象 1 和 2 的分配给变量 a 和 b，字符串对象 "悟空" 分配给变量 c。
print(a, b, c)
"""
1 2 悟空
"""


print('---------------------------------------------------------------------------------------------------------------')
'''Python 数字类型 AND 数字类型转换'''

a, b, c, d = 20, 5.123456789, True, 4 + 3j     # 一个变量可以通过赋值指向不同类型的对象。
print(type(a), type(b), type(c), type(d))      # type()不会认为子类是一种父类类型
print(int(b), float(b), complex(b))            # 将变量转换为一个整数、浮点数、复数
print(isinstance(a, int))                      # isinstance()会认为子类是一种父类类型
print(isinstance(b, int))                      # isinstance()会认为子类是一种父类类型
"""
<class 'int'> <class 'float'> <class 'bool'> <class 'complex'>
5 5.123456789 (5.123456789+0j)
True
False
"""


print('---------------------------------------------------------------------------------------------------------------')
print(a + c)       # bool 是 int 的子类，True 和 False 可以和数字相加， True==1、False==0 会返回 True，但可以通过 is 来判断类型。
print(False + 1)
print(1 is True)
print(0 is False)
"""
<class 'int'> <class 'float'> <class 'bool'> <class 'complex'>
False
False
"""


print('---------------------------------------------------------------------------------------------------------------')
'''Python 数字运算'''

var1 = var2 = var3 = 10
del(var1, var2)      # 使用del语句删除单个或多个对象
# print(var2, var3)  # NameError: name 'var2' is not defined

print(1 + 1)                # 加法
print(5.5 - 1)              # 减法
print(9 * 9)                # 乘法
print(10 / 2, 11.11 / 2)    # 乘法，得到一个浮点数
print(10 // 2, 11.11 // 2)  # 乘法，得到一个整数
print(10.5 % 2)             # 取余
print(2 ** 3)               # 乘方
"""
2
4.5
81
5.0 5.555
5 5.0
0.5
8
"""


print('---------------------------------------------------------------------------------------------------------------')
'''Python 数学函数'''

a, b, c, d = 20, 5.123456789, True, -11.4567
print(abs(d))                    # 返回数字的绝对值
print(fabs(d))                   # 返回数字的绝对值
print(floor(d))                  # 返回数字的下舍整
print(max(a, b, c, d))           # 返回给定参数的最大值
print(min(a, b, c, d))           # 返回给定参数的最小值
print(round(b, 4))               # 返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数
print(range(10))                 # 从0到9中随机挑选一个整数
print(random())                  # 随机生成下一个实数，它在[0,1)范围内
print("从 range(100) 返回一个随机数 : ", choice(range(100)))
print("从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 : ", choice([1, 2, 3, 5, 9]))
print("从字符串中 'Python' 返回一个随机字符 : ", choice('Python'))

"""
11.4567
11.4567
-12
20
-11.4567
5.1235
range(0, 10)
0.8051208030797207
从 range(100) 返回一个随机数 :  53
从列表中 [1, 2, 3, 5, 9]) 返回一个随机元素 :  5
从字符串中 'Python' 返回一个随机字符 :  P
"""


print('---------------------------------------------------------------------------------------------------------------')
def change(a):
    print(id(a))   # 指向的是同一个对象
    a = 10         # 重新被赋值，对象的引用地址没有变，变的是值
    print(id(a))   # 一个新对象

a = 1
print(id(a))
change(a)
print(id(a))


"""
28995712
28995712
28995856
28995712
"""
# 可以看见在调用函数前后，形参和实参指向的是同一个对象（对象 id 相同），在函数内部修改形参后，形参指向的是不同的 id。
